//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace KF.Entity
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class KFentities : DbContext
    {
        public KFentities()
            : base("name=KFentities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<ArchiveDirectorLog> ArchiveDirectorLogs { get; set; }
        public virtual DbSet<Bank> Banks { get; set; }
        public virtual DbSet<CardDetail> CardDetails { get; set; }
        public virtual DbSet<Category> Categories { get; set; }
        public virtual DbSet<ClassificationType> ClassificationTypes { get; set; }
        public virtual DbSet<CloudImagesRecord> CloudImagesRecords { get; set; }
        public virtual DbSet<Country> Countries { get; set; }
        public virtual DbSet<FiscalYearPosting> FiscalYearPostings { get; set; }
        public virtual DbSet<Industry> Industries { get; set; }
        public virtual DbSet<IndustryClassification> IndustryClassifications { get; set; }
        public virtual DbSet<KippinStoreImage> KippinStoreImages { get; set; }
        public virtual DbSet<License> Licenses { get; set; }
        public virtual DbSet<Ownership> Ownerships { get; set; }
        public virtual DbSet<Province> Provinces { get; set; }
        public virtual DbSet<ReconcilationMethodTypename> ReconcilationMethodTypenames { get; set; }
        public virtual DbSet<ReportRange> ReportRanges { get; set; }
        public virtual DbSet<RetainedEarning> RetainedEarnings { get; set; }
        public virtual DbSet<RetainedEarningLog> RetainedEarningLogs { get; set; }
        public virtual DbSet<Role> Roles { get; set; }
        public virtual DbSet<ShadowEntryRecord> ShadowEntryRecords { get; set; }
        public virtual DbSet<Status> Status { get; set; }
        public virtual DbSet<SubIndustry> SubIndustries { get; set; }
        public virtual DbSet<tblMonth> tblMonths { get; set; }
        public virtual DbSet<tblYear> tblYears { get; set; }
        public virtual DbSet<UnlinkRecordLog> UnlinkRecordLogs { get; set; }
        public virtual DbSet<UserPrice> UserPrices { get; set; }
        public virtual DbSet<UserRegistration> UserRegistrations { get; set; }
        public virtual DbSet<UserUpdateProfileLog> UserUpdateProfileLogs { get; set; }
        public virtual DbSet<YodleeAccountDetail> YodleeAccountDetails { get; set; }
        public virtual DbSet<YodleeErrorLog> YodleeErrorLogs { get; set; }
        public virtual DbSet<YodleeUserRegistration> YodleeUserRegistrations { get; set; }
        public virtual DbSet<DirectorAccount> DirectorAccounts { get; set; }
        public virtual DbSet<Currency> Currencies { get; set; }
        public virtual DbSet<UserLincensePayment> UserLincensePayments { get; set; }
        public virtual DbSet<BankExpense> BankExpenses { get; set; }
        public virtual DbSet<InvoiceUserRegistration> InvoiceUserRegistrations { get; set; }
        public virtual DbSet<StripeKeyDetail> StripeKeyDetails { get; set; }
        public virtual DbSet<tblCustomerOrSupplier> tblCustomerOrSuppliers { get; set; }
        public virtual DbSet<tblInvoiceDetail> tblInvoiceDetails { get; set; }
        public virtual DbSet<tblInvoiceType> tblInvoiceTypes { get; set; }
        public virtual DbSet<tblItemDetail> tblItemDetails { get; set; }
        public virtual DbSet<InvoicetblColumnDetail> InvoicetblColumnDetails { get; set; }
        public virtual DbSet<StripePayCardDetail> StripePayCardDetails { get; set; }
        public virtual DbSet<tblCurrency> tblCurrencies { get; set; }
        public virtual DbSet<tblFlowStatu> tblFlowStatus { get; set; }
        public virtual DbSet<tblTypeOfInvoice> tblTypeOfInvoices { get; set; }
        public virtual DbSet<tblExpens> tblExpenses { get; set; }
        public virtual DbSet<StripePaymnt> StripePaymnts { get; set; }
        public virtual DbSet<tblSTypeCategory> tblSTypeCategories { get; set; }
        public virtual DbSet<tblT1TypeCategories> tblT1TypeCategories { get; set; }
        public virtual DbSet<tblT2TypeCategories> tblT2TypeCategories { get; set; }
        public virtual DbSet<tblZTypeCategory> tblZTypeCategories { get; set; }
        public virtual DbSet<tblTemplateClassification> tblTemplateClassifications { get; set; }
        public virtual DbSet<DirectorAccountLog> DirectorAccountLogs { get; set; }
        public virtual DbSet<SubAccountantUserPermission> SubAccountantUserPermissions { get; set; }
        public virtual DbSet<ArchiveBankExpense> ArchiveBankExpenses { get; set; }
        public virtual DbSet<Classification> Classifications { get; set; }
        public virtual DbSet<MasterClassification> MasterClassifications { get; set; }
    
        public virtual ObjectResult<sp_GetSupplierLists_Result> sp_GetSupplierLists(Nullable<int> userId, Nullable<int> roleId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var roleIdParameter = roleId.HasValue ?
                new ObjectParameter("RoleId", roleId) :
                new ObjectParameter("RoleId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetSupplierLists_Result>("sp_GetSupplierLists", userIdParameter, roleIdParameter);
        }
    
        public virtual ObjectResult<sp_GType_Result> sp_GType(Nullable<int> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GType_Result>("sp_GType", userIdParameter);
        }
    
        public virtual ObjectResult<sp_SType_Result> sp_SType()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SType_Result>("sp_SType");
        }
    
        public virtual ObjectResult<sp_TType_Result> sp_TType(Nullable<int> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_TType_Result>("sp_TType", userIdParameter);
        }
    
        public virtual ObjectResult<string> KI_GetFlowStatus(string flowStatus, Nullable<decimal> depositePayment, Nullable<decimal> balanceDue, string pro_Status)
        {
            var flowStatusParameter = flowStatus != null ?
                new ObjectParameter("flowStatus", flowStatus) :
                new ObjectParameter("flowStatus", typeof(string));
    
            var depositePaymentParameter = depositePayment.HasValue ?
                new ObjectParameter("DepositePayment", depositePayment) :
                new ObjectParameter("DepositePayment", typeof(decimal));
    
            var balanceDueParameter = balanceDue.HasValue ?
                new ObjectParameter("BalanceDue", balanceDue) :
                new ObjectParameter("BalanceDue", typeof(decimal));
    
            var pro_StatusParameter = pro_Status != null ?
                new ObjectParameter("Pro_Status", pro_Status) :
                new ObjectParameter("Pro_Status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("KI_GetFlowStatus", flowStatusParameter, depositePaymentParameter, balanceDueParameter, pro_StatusParameter);
        }
    
        public virtual ObjectResult<KI_getIndustryID_Result> KI_getIndustryID(Nullable<int> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KI_getIndustryID_Result>("KI_getIndustryID", userIdParameter);
        }
    
        public virtual ObjectResult<KI_GetInvoiceDataforpdf_Result> KI_GetInvoiceDataforpdf(Nullable<int> userId, Nullable<int> isCustomer)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var isCustomerParameter = isCustomer.HasValue ?
                new ObjectParameter("isCustomer", isCustomer) :
                new ObjectParameter("isCustomer", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KI_GetInvoiceDataforpdf_Result>("KI_GetInvoiceDataforpdf", userIdParameter, isCustomerParameter);
        }
    
        public virtual ObjectResult<Kl_BlockAccNoList_Result> Kl_BlockAccNoList(Nullable<int> userdId)
        {
            var userdIdParameter = userdId.HasValue ?
                new ObjectParameter("UserdId", userdId) :
                new ObjectParameter("UserdId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Kl_BlockAccNoList_Result>("Kl_BlockAccNoList", userdIdParameter);
        }
    
        public virtual ObjectResult<Kl_BlockAccNoList_forUserIdNull_Result> Kl_BlockAccNoList_forUserIdNull(Nullable<int> userdId)
        {
            var userdIdParameter = userdId.HasValue ?
                new ObjectParameter("UserdId", userdId) :
                new ObjectParameter("UserdId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Kl_BlockAccNoList_forUserIdNull_Result>("Kl_BlockAccNoList_forUserIdNull", userdIdParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> Kl_ExitinStripe(Nullable<int> customerid)
        {
            var customeridParameter = customerid.HasValue ?
                new ObjectParameter("customerid", customerid) :
                new ObjectParameter("customerid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("Kl_ExitinStripe", customeridParameter);
        }
    
        public virtual ObjectResult<string> Kl_GetCompanyNameSend(Nullable<int> userid, Nullable<int> invoiceid)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var invoiceidParameter = invoiceid.HasValue ?
                new ObjectParameter("invoiceid", invoiceid) :
                new ObjectParameter("invoiceid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Kl_GetCompanyNameSend", useridParameter, invoiceidParameter);
        }
    
        public virtual ObjectResult<string> kl_getCustomerEmail(Nullable<int> useid)
        {
            var useidParameter = useid.HasValue ?
                new ObjectParameter("useid", useid) :
                new ObjectParameter("useid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("kl_getCustomerEmail", useidParameter);
        }
    
        public virtual ObjectResult<Kl_GetSupplierDataforUserID_Result> Kl_GetSupplierDataforUserID(Nullable<int> userid, Nullable<int> invoiceid)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var invoiceidParameter = invoiceid.HasValue ?
                new ObjectParameter("invoiceid", invoiceid) :
                new ObjectParameter("invoiceid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Kl_GetSupplierDataforUserID_Result>("Kl_GetSupplierDataforUserID", useridParameter, invoiceidParameter);
        }
    
        public virtual ObjectResult<kl_Invoicedata_email_Result> kl_Invoicedata_email(Nullable<int> useid)
        {
            var useidParameter = useid.HasValue ?
                new ObjectParameter("useid", useid) :
                new ObjectParameter("useid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<kl_Invoicedata_email_Result>("kl_Invoicedata_email", useidParameter);
        }
    
        public virtual ObjectResult<Kl_ReceivedInvoiceList_Result> Kl_ReceivedInvoiceList(Nullable<int> userid)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Kl_ReceivedInvoiceList_Result>("Kl_ReceivedInvoiceList", useridParameter);
        }
    
        public virtual ObjectResult<kl_ReceivedProformaList_Result> kl_ReceivedProformaList(Nullable<int> userid)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<kl_ReceivedProformaList_Result>("kl_ReceivedProformaList", useridParameter);
        }
    
        public virtual ObjectResult<Kl_ReportingList_Result> Kl_ReportingList(Nullable<int> userid)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Kl_ReportingList_Result>("Kl_ReportingList", useridParameter);
        }
    
        public virtual ObjectResult<kl_ReportingListwithoutDraft_Result> kl_ReportingListwithoutDraft(Nullable<int> userid)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<kl_ReportingListwithoutDraft_Result>("kl_ReportingListwithoutDraft", useridParameter);
        }
    
        public virtual ObjectResult<Kl_SendInvoiceList_Result> Kl_SendInvoiceList(Nullable<int> userid)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Kl_SendInvoiceList_Result>("Kl_SendInvoiceList", useridParameter);
        }
    
        public virtual ObjectResult<Kl_SendProformaList_Result> Kl_SendProformaList(Nullable<int> userid)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Kl_SendProformaList_Result>("Kl_SendProformaList", useridParameter);
        }
    
        public virtual ObjectResult<string> Kl_GetCompanyNamr(Nullable<int> userid, Nullable<int> customer)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var customerParameter = customer.HasValue ?
                new ObjectParameter("customer", customer) :
                new ObjectParameter("customer", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Kl_GetCompanyNamr", useridParameter, customerParameter);
        }
    
        public virtual ObjectResult<string> Kl_getSupplierEmail(Nullable<int> useid)
        {
            var useidParameter = useid.HasValue ?
                new ObjectParameter("useid", useid) :
                new ObjectParameter("useid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Kl_getSupplierEmail", useidParameter);
        }
    }
}
